// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use aravis_sys;
use glib::object::Cast;
use glib::object::IsA;
use glib::translate::*;
use std::fmt;
use DomNode;
use DomNodeList;

glib_wrapper! {
	pub struct DomNodeChildList(Object<aravis_sys::ArvDomNodeChildList, aravis_sys::ArvDomNodeChildListClass, DomNodeChildListClass>) @extends DomNodeList;

	match fn {
		get_type => || aravis_sys::arv_dom_node_child_list_get_type(),
	}
}

impl DomNodeChildList {
	pub fn new<P: IsA<DomNode>>(parent_node: &P) -> DomNodeChildList {
		skip_assert_initialized!();
		unsafe {
			DomNodeList::from_glib_full(aravis_sys::arv_dom_node_child_list_new(
				parent_node.as_ref().to_glib_none().0,
			))
			.unsafe_cast()
		}
	}
}

unsafe impl Send for DomNodeChildList {}

pub const NONE_DOM_NODE_CHILD_LIST: Option<&DomNodeChildList> = None;

impl fmt::Display for DomNodeChildList {
	fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
		write!(f, "DomNodeChildList")
	}
}
