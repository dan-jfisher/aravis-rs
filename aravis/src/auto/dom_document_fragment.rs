// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use crate::DomNode;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
	#[doc(alias = "ArvDomDocumentFragment")]
	pub struct DomDocumentFragment(Object<ffi::ArvDomDocumentFragment, ffi::ArvDomDocumentFragmentClass>) @extends DomNode;

	match fn {
		type_ => || ffi::arv_dom_document_fragment_get_type(),
	}
}

impl DomDocumentFragment {
	#[doc(alias = "arv_dom_document_fragment_new")]
	pub fn new() -> DomDocumentFragment {
		assert_initialized_main_thread!();
		unsafe { from_glib_full(ffi::arv_dom_document_fragment_new()) }
	}
}

impl Default for DomDocumentFragment {
	fn default() -> Self {
		Self::new()
	}
}

unsafe impl Send for DomDocumentFragment {}

pub const NONE_DOM_DOCUMENT_FRAGMENT: Option<&DomDocumentFragment> = None;

impl fmt::Display for DomDocumentFragment {
	fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
		f.write_str("DomDocumentFragment")
	}
}
