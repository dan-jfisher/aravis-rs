// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use crate::DomElement;
use crate::DomNode;
use crate::GcFeatureNode;
use crate::GcNode;
use std::fmt;

glib::wrapper! {
	#[doc(alias = "ArvGcSwissKnife")]
	pub struct GcSwissKnife(Object<ffi::ArvGcSwissKnife, ffi::ArvGcSwissKnifeClass>) @extends GcFeatureNode, GcNode, DomElement, DomNode;

	match fn {
		type_ => || ffi::arv_gc_swiss_knife_get_type(),
	}
}

impl GcSwissKnife {}

unsafe impl Send for GcSwissKnife {}

pub const NONE_GC_SWISS_KNIFE: Option<&GcSwissKnife> = None;

impl fmt::Display for GcSwissKnife {
	fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
		f.write_str("GcSwissKnife")
	}
}
